import streamlit as st
import google.generativeai as genai
from PIL import Image
import io

# --- Configura√ß√£o da API e do app ---
st.set_page_config(page_title="An√°lise de Embalagens com IA", layout="centered")
st.title("üìã Relat√≥rio de Primeira Produ√ß√£o")

api_key = st.secrets["GOOGLE_API_KEY"]
if api_key:
    genai.configure(api_key=api_key)
    model = genai.GenerativeModel('gemini-1.5-flash')
else:
    st.stop()

# --- Prompts ---
prompt_nao_alimento = """
Voc√™ √© um assistente de avalia√ß√£o t√©cnica de **primeira produ√ß√£o**, respons√°vel por avaliar imagens de **embalagens e produtos** com base em crit√©rios t√©cnicos.

Analise visualmente as imagens e extraia, se dispon√≠veis, as seguintes informa√ß√µes diretamente da rotulagem:
- Nome do fornecedor:
- CNPJ do fornecedor:
- Descri√ß√£o do produto:
- Data de fabrica√ß√£o:
- Data de validade:
- Lote:
- C√≥digo EAN:
Se alguma informa√ß√£o n√£o estiver vis√≠vel ou leg√≠vel, sinalize como **"N√£o identificado"**.
"""

prompt_avaliacao_embalagem = """
Voc√™ √© um assistente de avalia√ß√£o t√©cnica de **embalagens**, respons√°vel por analisar as imagens de **embalagens** com base em crit√©rios t√©cnicos.

A avalia√ß√£o deve ser feita com foco nos seguintes crit√©rios:
- Conformidade com exig√™ncias normativas da categoria;
- Presen√ßa e legibilidade de data√ß√£o (fabrica√ß√£o e validade), lote e c√≥digo EAN;
- Presen√ßa de informa√ß√µes obrigat√≥rias (uso, composi√ß√£o, fabricante, precau√ß√µes);
- Aus√™ncia de erros ortogr√°ficos e gramaticais;
- Condi√ß√£o f√≠sica da embalagem (sem avarias, vazamentos ou deforma√ß√µes).

**Instru√ß√µes de resposta**:
- A resposta deve ser em **texto corrido**, com linguagem **t√©cnica e objetiva**;
- **N√£o use bullet points**;
- Caso encontre falhas, apresente como **ponto de aten√ß√£o**, com recomenda√ß√£o t√©cnica.

Exemplo de sa√≠da esperada:
A embalagem analisada apresenta data√ß√£o, c√≥digo EAN e lote de forma leg√≠vel e de acordo com os requisitos da categoria. As informa√ß√µes obrigat√≥rias est√£o presentes e redigidas corretamente. A rotulagem apresenta composi√ß√£o, modo de uso, precau√ß√µes e dados do fabricante conforme exigido. A embalagem n√£o apresenta sinais de avaria ou deforma√ß√£o. Recomenda-se sua aprova√ß√£o para comercializa√ß√£o.
"""

# --- Upload de Imagens ---
imagens = st.file_uploader("üì§ Envie at√© 5 imagens JPG ou JPEG para an√°lise:", type=["jpg", "jpeg"], accept_multiple_files=True)

# --- Processamento ---
if st.button("üîé Analisar Imagens"):
    if not imagens:
        st.warning("Envie pelo menos uma imagem.")
        st.stop()

    imagens_pil = []
    for img_file in imagens[:5]:  # Limita a 5
        try:
            img = Image.open(img_file).convert("RGB")
            imagens_pil.append(img)
        except Exception as e:
            st.error(f"Erro ao abrir imagem {img_file.name}: {e}")

    if imagens_pil:
        try:
            # --- Execu√ß√£o da an√°lise 1: extra√ß√£o de dados ---
            st.info("Analisando rotulagem para extra√ß√£o de informa√ß√µes t√©cnicas...")
            resposta_rotulagem = model.generate_content([prompt_nao_alimento] + imagens_pil)
            st.success("‚úÖ Extra√ß√£o de Dados Conclu√≠da")
            st.text_area("üìã Resultado da Extra√ß√£o:", resposta_rotulagem.text, height=300)

            # --- Execu√ß√£o da an√°lise 2: avalia√ß√£o t√©cnica ---
            st.info("Realizando avalia√ß√£o t√©cnica da embalagem...")
            resposta_avaliacao = model.generate_content([prompt_avaliacao_embalagem] + imagens_pil)
            st.success("‚úÖ Avalia√ß√£o T√©cnica Conclu√≠da")
            st.text_area("üß™ Resultado da Avalia√ß√£o T√©cnica:", resposta_avaliacao.text, height=300)

        except Exception as e:
            st.error(f"Erro durante a an√°lise com IA: {e}")
    else:
        st.warning("Nenhuma imagem v√°lida foi processada.")